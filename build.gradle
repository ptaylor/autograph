//
// MIT License
//
// Copyright (c) 2017 ptaylor
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//

buildscript {
    repositories {
        jcenter()  
        mavenCentral()
    }

    ext.kotlin_version = kotlin_version

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-RC2'
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'org.junit.platform.gradle.plugin'



repositories {
    jcenter()  
    mavenCentral()
    maven { url "http://dl.bintray.com/jetbrains/spek" }
}



dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
 
    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testCompile ("org.jetbrains.spek:spek-api:${spek_version}") {
        //exclude group: 'org.jetbrains.kotlin'
    }
    testRuntime ("org.jetbrains.spek:spek-junit-platform-engine:${spek_version}") {
        //exclude group: 'org.junit.platform'
        //exclude group: 'org.jetbrains.kotlin'
    }
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
    test.java.srcDirs += 'src/test/kotlin/'
}

junitPlatform {
    reportsDir file("$buildDir/test-results/junit-platform")
    filters {
        engines {
            include 'spek'
        }
    }
}
test {
    reports {
        junitXml.enabled = false
        html.enabled = true
    }               
}

mainClassName = 'org.pftylr.autograph.AutographMainKt'
/*
jar {
    manifest {
        attributes 'Implementation-Title': 'Kotlin example',
            'Implementation-Version': version,
            'Main-Class': mainClassName
    }
}
*/

task fatJar(type: Jar) {
 
   manifest {
        attributes 'Implementation-Title': 'Kotlin example',
            'Implementation-Version': version,
            'Main-Class': mainClassName
    }

    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

